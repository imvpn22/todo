{"version":3,"sources":["Components/TodoItem.js","Components/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateCurrentText","e","inputText","target","value","setState","createTodoItem","preventDefault","addItem","state","_this2","item","react_default","a","createElement","className","isDone","isDeleted","key","_id","onClick","doneItem","disabled","editable","type","text","onChange","activeEdit","autoFocus","saveItem","editItem","deleteItem","Component","TodoList","createItemHtml","Components_TodoItem","items","listItems","filter","map","doneItems","deleteItems","onSubmit","ref","newItemRef","placeholder","required","API_BASE_URL","App","addTodo","newItem","addTodoInBackend","Date","now","push","updateTodo","todo","updateTodoInBackend","deleteTodo","deleteTodoFromBackend","handleItemChange","currentItem","itemId","stopPropagation","updateLocalStorage","data","localStorage","setItem","JSON","stringify","getTodosFromBackend","axios","get","then","res","todos","catch","err","console","log","put","post","todoId","delete","React","createRef","current","focus","ls","getItem","parse","length","Components_TodoList","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b51363b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TodoItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputText: ''\r\n    };\r\n  }\r\n\r\n  updateCurrentText = e => {\r\n    const inputText = e.target.value;\r\n    this.setState({ inputText });\r\n  };\r\n\r\n  createTodoItem = e => {\r\n    e.preventDefault();\r\n    this.props.addItem(this.state.inputText);\r\n  };\r\n\r\n  render() {\r\n    const { item } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={\r\n          'item ' +\r\n          (item.isDone ? 'done-item ' : 'active-item ') +\r\n          (item.isDeleted ? ' deleted-item ' : '')\r\n        }\r\n        key={item._id}\r\n      >\r\n        <label>\r\n          <button\r\n            onClick={() => this.props.doneItem(item)}\r\n            className=\"tick-btn\"\r\n            disabled={item.isDeleted}\r\n          >\r\n            <i\r\n              className={\r\n                'far ' + (item.isDone ? 'fa-check-circle' : 'fa-circle')\r\n              }\r\n            />\r\n          </button>\r\n\r\n          {item.editable ? (\r\n            <input\r\n              type=\"text\"\r\n              value={item.text}\r\n              onChange={e => this.props.activeEdit(item._id, e)}\r\n              autoFocus={true}\r\n            />\r\n          ) : (\r\n            <span>{item.text}</span>\r\n          )}\r\n        </label>\r\n        <span>\r\n          {item.editable ? (\r\n            <button onClick={() => this.props.saveItem(item)}>\r\n              <i className=\"far fa-save\" />\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={() => this.props.editItem(item._id)}\r\n              disabled={item.isDeleted}\r\n            >\r\n              <i className=\"fas fa-pencil-alt\" />\r\n            </button>\r\n          )}\r\n\r\n          <button\r\n            className=\"delete-btn\"\r\n            onClick={() => this.props.deleteItem(item)}\r\n            disabled={item.isDeleted}\r\n          >\r\n            <i className=\"far fa-trash-alt\" />\r\n          </button>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nclass TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputText: ''\r\n    };\r\n  }\r\n\r\n  updateCurrentText = e => {\r\n    const inputText = e.target.value;\r\n    this.setState({ inputText });\r\n  };\r\n\r\n  createTodoItem = e => {\r\n    e.preventDefault();\r\n    this.props.addItem(this.state.inputText);\r\n    this.setState({ inputText: '' });\r\n  };\r\n\r\n  createItemHtml = item => (\r\n    <TodoItem\r\n      key={item._id}\r\n      item={item}\r\n      editItem={this.props.editItem}\r\n      saveItem={this.props.saveItem}\r\n      activeEdit={this.props.activeEdit}\r\n      doneItem={this.props.doneItem}\r\n      deleteItem={this.props.deleteItem}\r\n    />\r\n  );\r\n\r\n  render() {\r\n    const items = this.props.items;\r\n    const listItems = items\r\n      .filter(item => !item.isDone && !item.isDeleted)\r\n      .map(item => this.createItemHtml(item));\r\n    const doneItems = items\r\n      .filter(item => item.isDone && !item.isDeleted)\r\n      .map(item => this.createItemHtml(item));\r\n    const deleteItems = items\r\n      .filter(item => item.isDeleted)\r\n      .map(item => this.createItemHtml(item));\r\n\r\n    return (\r\n      <div className=\"main\">\r\n        <div className=\"header\">ToDo</div>\r\n        <div className=\"itemList\">\r\n          {listItems}\r\n          {doneItems}\r\n          {/* <div class=\"divider\" /> */}\r\n          {deleteItems}\r\n        </div>\r\n        <div className=\"new-item item\">\r\n          <form onSubmit={this.createTodoItem}>\r\n            <input\r\n              ref={this.props.newItemRef}\r\n              value={this.state.inputText}\r\n              onChange={e => this.updateCurrentText(e)}\r\n              type=\"text\"\r\n              placeholder=\"Add new item\"\r\n              required\r\n            />\r\n            <button type=\"submit\">\r\n              <i className=\"fas fa-check\" />\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport TodoList from './Components/TodoList';\r\n\r\n// const API_BASE_URL = 'http://localhost:8000/api';\r\nconst API_BASE_URL = 'https://imvpn22-todo.herokuapp.com/api';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.newItemRef = React.createRef();\r\n    this.state = {\r\n      currentItem: {},\r\n      items: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.newItemRef.current.focus();\r\n    const ls = localStorage.getItem('todos');\r\n    let todos = [];\r\n\r\n    try {\r\n      todos = JSON.parse(ls);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n\r\n    if (todos && todos.length) {\r\n      this.setState({ items: todos });\r\n    }\r\n\r\n    // call\r\n    this.getTodosFromBackend();\r\n  }\r\n\r\n  addTodo = text => {\r\n    const newItem = { text };\r\n    this.addTodoInBackend(newItem);\r\n    const { items } = this.state;\r\n    newItem._id = Date.now();\r\n    items.push(newItem);\r\n    this.setState({ items });\r\n  };\r\n\r\n  updateTodo = todo => {\r\n    this.updateTodoInBackend(todo);\r\n    const items = this.state.items.map(item => {\r\n      if (item._id === todo._id) {\r\n        return todo;\r\n      }\r\n      return item;\r\n    });\r\n    this.setState({ items });\r\n  };\r\n\r\n  deleteTodo = todo => {\r\n    this.deleteTodoFromBackend(todo._id);\r\n    const items = this.state.items.filter(item => item._id !== todo._id);\r\n    this.setState({ items });\r\n  };\r\n\r\n  handleItemChange = text => {\r\n    let currentItem = {\r\n      text: text\r\n    };\r\n    this.setState({ currentItem });\r\n  };\r\n\r\n  doneItem = item => {\r\n    item.isDone = !item.isDone;\r\n    this.updateTodo(item);\r\n  };\r\n\r\n  deleteItem = item => {\r\n    item.isDeleted = true;\r\n    // this.updateTodo(item);\r\n    this.deleteTodo(item);\r\n  };\r\n\r\n  editItem = itemId => {\r\n    let items = this.state.items;\r\n    items = items.map(item => {\r\n      if (item._id === itemId) item.editable = !item.editable;\r\n      return item;\r\n    });\r\n    this.setState({ items });\r\n  };\r\n\r\n  saveItem = item => {\r\n    item.editable = false;\r\n    this.updateTodo(item);\r\n  };\r\n\r\n  activeEdit = (itemId, e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    let text = e.target.value;\r\n    let items = this.state.items;\r\n    items = items.map(item => {\r\n      if (item._id === itemId) item.text = text;\r\n      return item;\r\n    });\r\n    this.setState({ items });\r\n    // this.updateLocalStorage(items);\r\n  };\r\n\r\n  updateLocalStorage = data => {\r\n    localStorage.setItem('todos', JSON.stringify(data));\r\n  };\r\n\r\n  getTodosFromBackend = () => {\r\n    axios\r\n      .get(API_BASE_URL + '/todos')\r\n      .then(res => {\r\n        const { todos } = res.data;\r\n        this.setState({ items: todos });\r\n        this.updateLocalStorage(todos);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  updateTodoInBackend = todo => {\r\n    axios\r\n      .put(API_BASE_URL + '/todos', todo)\r\n      .then(res => {\r\n        // console.log(res);\r\n        // const { todos } = res.data;\r\n        // this.setState({ items: todos });\r\n        this.getTodosFromBackend();\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  addTodoInBackend = data => {\r\n    axios\r\n      .post(API_BASE_URL + '/todos', data)\r\n      .then(res => {\r\n        this.getTodosFromBackend();\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  deleteTodoFromBackend = todoId => {\r\n    axios\r\n      .delete(API_BASE_URL + '/todos/' + todoId)\r\n      .then(res => {\r\n        // console.log('delete success', res.data);\r\n        this.getTodosFromBackend();\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <TodoList\r\n          items={this.state.items}\r\n          newItemRef={this.newItemRef}\r\n          currentItem={this.state.currentItem}\r\n          handleItemChange={this.handleItemChange}\r\n          addItem={this.addTodo}\r\n          doneItem={this.doneItem}\r\n          deleteItem={this.deleteItem}\r\n          editItem={this.editItem}\r\n          activeEdit={this.activeEdit}\r\n          saveItem={this.saveItem}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}